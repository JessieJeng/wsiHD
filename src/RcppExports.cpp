// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// BigArmaCSeq
NumericVector BigArmaCSeq(SEXP pv, double alpha);
RcppExport SEXP _wsiHD_BigArmaCSeq(SEXP pvSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pv(pvSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(BigArmaCSeq(pv, alpha));
    return rcpp_result_gen;
END_RCPP
}
// BigArmaFNP
NumericVector BigArmaFNP(SEXP pv, double sHat, double beta);
RcppExport SEXP _wsiHD_BigArmaFNP(SEXP pvSEXP, SEXP sHatSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pv(pvSEXP);
    Rcpp::traits::input_parameter< double >::type sHat(sHatSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(BigArmaFNP(pv, sHat, beta));
    return rcpp_result_gen;
END_RCPP
}
// BigArmaPiHat
NumericVector BigArmaPiHat(SEXP pv, double c05, double c1);
RcppExport SEXP _wsiHD_BigArmaPiHat(SEXP pvSEXP, SEXP c05SEXP, SEXP c1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pv(pvSEXP);
    Rcpp::traits::input_parameter< double >::type c05(c05SEXP);
    Rcpp::traits::input_parameter< double >::type c1(c1SEXP);
    rcpp_result_gen = Rcpp::wrap(BigArmaPiHat(pv, c05, c1));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_wsiHD_BigArmaCSeq", (DL_FUNC) &_wsiHD_BigArmaCSeq, 2},
    {"_wsiHD_BigArmaFNP", (DL_FUNC) &_wsiHD_BigArmaFNP, 3},
    {"_wsiHD_BigArmaPiHat", (DL_FUNC) &_wsiHD_BigArmaPiHat, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_wsiHD(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
